# Guia de Contribuição

Agradeço por considerar contribuir com este projeto! 
Toda ajuda é bem-vinda - seja com código, documentação, ideias ou testes. 
Este guia explica como você pode colaborar de forma eficiente e respeitosa.

---

## Tipos de contribuição

Você pode contribuir de várias formas:

- Extração de dados
- Melhoria de fonte de dados
- Enriquecimento de bases históricas
- Limpeza e transformação de dados
- Análise exploratória
- Modelagem estatística
- Visualização de dados
- Documentação

---

## Como contribuir

1. **Fork o repositório**
   - Clique em "Fork" no topo da página do GitHub.
   O "fork" é como fazer uma cópia do projeto para a sua conta do GitHub. Isso permite que você faça alterações sem afetar o projeto original.
   Vá até a página principal do repositório que você quer contribuir.
   No canto superior direito, clique no botão Fork.
   O GitHub vai criar uma cópia do projeto na sua conta - agora você tem seu próprio repositório para trabalhar.
Exemplo: Se o projeto original está em github.com/projeto-original, seu fork será algo como github.com/seu-usuario/projeto-original.

2. **Clone o seu fork localmente**
   ```bash
   git clone https://github.com/seu-usuario/seu-fork.git
   cd seu-fork
   ```
   "Clonar" significa baixar o projeto para o seu computador, para que você possa editar os arquivos com ferramentas como VS Code.
   Abra o terminal (ou Git Bash, se estiver no Windows).
   Copie o link do seu repositório forkado (geralmente termina com .git).
   Execute o seguinte comando no terminal:

   git clone https://github.com/seu-usuario/seu-fork.git
   Substitua "seu-usuario" pelo seu nome de usuário do GitHub e "seu-fork" pelo nome do repositório.
   Isso cria uma cópia do repositório na sua máquina local.
   Navegue até o diretório do projeto:
   cd seu-fork
   Agora você está dentro da pasta do projeto no seu computador.

3. **Crie uma nova branch para sua contribuição**
   ```bash
   git checkout -b minha-contribuicao
   ```
   Uma branch é como uma linha de trabalho separada. 
   Você cria uma para fazer suas alterações sem mexer diretamente na versão principal do projeto (geralmente chamada main ou master).

   Isso cria uma nova branch chamada minha-contribuicao e já muda para ela. 
   Você pode dar o nome que quiser - de preferência algo que descreva o que você vai fazer, como ajuste-dashboard ou corrige-bug-tecnico.

4. **Faça suas alterações**
   Agora é hora de editar os arquivos do projeto no seu computador. Você pode:
   - Abrir o projeto no VS Code ou outro editor.
   - Adicionar novos notebooks, gráficos, scripts ou textos.
   - Corrigir erros ou melhorar o código existente.
   - Atualizar a documentação.
   - Testar suas mudanças para garantir que tudo funciona como esperado.
   Lembre-se de salvar suas alterações.

5. **Adicione e faça commit das suas mudanças**
   ```bash
   git add .
   git commit -m "Descrição clara do que você fez"
   ```
   A mensagem deve ser clara e objetiva. Você pode usar prefixos como:

   *feat*: para novas funcionalidades
   *fix*: para correções
   *docs*: para mudanças na documentação
   *refactor*: para melhorias no código

   "Adicionar" significa preparar suas mudanças para serem enviadas.
   "Commitar" é como tirar uma foto das suas alterações, com uma mensagem que explica o que você fez.

6. **Envie suas mudanças para o seu fork no GitHub**
   ```bash
   git push origin minha-contribuicao
   ```
   Isso envia suas alterações para o repositório online (seu fork) na branch que você criou.

7. **Abra um Pull Request (PR)**
   - Vá até o seu repositório fork no GitHub.
   - Clique no botão "Compare & pull request".
   - Adicione um título e uma descrição detalhada do que você fez.
   - Clique em "Create pull request".
   Um Pull Request é uma solicitação para que suas mudanças sejam revisadas e, se aprovadas, integradas ao projeto original.
   Seja claro e detalhado na descrição para facilitar a revisão.